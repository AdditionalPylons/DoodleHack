/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class NSString, OFAsyncSocket;
@protocol OFCRVStompClientDelegate;

@interface OFCRVStompClient : XXUnknownSuperclass {
	id<OFCRVStompClientDelegate> delegate;
	OFAsyncSocket* socket;
	NSString* host;
	unsigned port;
	NSString* login;
	NSString* passcode;
	NSString* sessionId;
	BOOL doAutoconnect;
}
@property(assign, nonatomic) id<OFCRVStompClientDelegate> delegate;
@property(retain, nonatomic) OFAsyncSocket* socket;
@property(copy, nonatomic) NSString* host;
@property(assign, nonatomic) unsigned port;
@property(copy, nonatomic) NSString* login;
@property(copy, nonatomic) NSString* passcode;
@property(copy, nonatomic) NSString* sessionId;
-(id)init;
-(id)initWithHost:(id)host port:(unsigned)port login:(id)login passcode:(id)passcode delegate:(id)delegate;
-(id)initWithHost:(id)host port:(unsigned)port login:(id)login passcode:(id)passcode delegate:(id)delegate autoconnect:(BOOL)autoconnect;
-(void)retrySocket;
-(void)connect;
-(void)sendMessage:(id)message toDestination:(id)destination;
-(void)pipeHttpRequest:(id)request withMethod:(id)method andContentType:(id)type andUrl:(id)url andBody:(id)body;
-(void)pingMcp;
-(void)subscribeToDestination:(id)destination;
-(void)subscribeToDestination:(id)destination withAck:(int)ack;
-(void)subscribeToDestination:(id)destination withHeader:(id)header;
-(void)unsubscribeFromDestination:(id)destination;
-(void)begin:(id)begin;
-(void)commit:(id)commit;
-(void)abort:(id)abort;
-(void)ack:(id)ack;
-(void)disconnect;
-(void)sendFrame:(id)frame withHeader:(id)header andBody:(id)body;
-(void)sendFrame:(id)frame;
-(void)receiveFrame:(id)frame headers:(id)headers body:(id)body;
-(void)readFrame;
-(void)onSocket:(id)socket didReadData:(id)data withTag:(long)tag;
-(void)onSocket:(id)socket didConnectToHost:(id)host port:(unsigned short)port;
-(void)onSocket:(id)socket didSecure:(BOOL)secure;
-(void)onSocket:(id)socket didWriteDataWithTag:(long)tag;
-(void)onSocketDidDisconnect:(id)onSocket;
-(void)onSocket:(id)socket willDisconnectWithError:(id)error;
-(void)dealloc;
@end

