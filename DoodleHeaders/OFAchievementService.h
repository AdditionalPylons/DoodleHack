/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "OFService.h"
#import "DoodleJump-Structs.h"
#import "OFAchievementService.h"

@class NSString, NSMutableArray;

@interface OFAchievementService : OFService {
	NSString* mCustomUrlWithSocialNotification;
	NSMutableArray* onlySubmitToGameCenterDeferedAchievementIds;
	NSMutableArray* onlySubmitToGameCenterDeferedAchievementPercentCompletes;
}
@property(retain, nonatomic) NSString* mCustomUrlWithSocialNotification;
@property(retain, nonatomic) NSMutableArray* onlySubmitToGameCenterDeferedAchievementIds;
@property(retain, nonatomic) NSMutableArray* onlySubmitToGameCenterDeferedAchievementPercentCompletes;
+(id)sharedInstance;
+(void)initializeService;
+(void)shutdownService;
+(void)getAchievementsForApplication:(id)application comparedToUser:(id)user page:(unsigned)page onSuccess:(const OFDelegate*)success onFailure:(const OFDelegate*)failure;
+(void)getAchievementsForApplication:(id)application comparedToUser:(id)user page:(unsigned)page silently:(BOOL)silently onSuccess:(const OFDelegate*)success onFailure:(const OFDelegate*)failure;
+(id)updateAchievement:(id)achievement andPercentComplete:(double)complete andShowNotification:(BOOL)notification;
+(id)updateAchievement:(id)achievement andPercentComplete:(double)complete andShowNotification:(BOOL)notification onSuccess:(const OFDelegate*)success onFailure:(const OFDelegate*)failure;
+(void)queueUpdateAchievement:(id)achievement andPercentComplete:(double)complete andShowNotification:(BOOL)notification;
+(id)submitQueuedUpdateAchievements:(const OFDelegate*)achievements onFailure:(const OFDelegate*)failure;
-(void)dealloc;
-(void)populateKnownResources:(OFResourceNameMap*)resources;
-(void)onAchievementUpdated:(id)updated nextCall:(id)call duringSync:(BOOL)sync fromBatch:(BOOL)batch;
@end

@interface OFAchievementService (Private)
+(void)setupOfflineSupport:(bool)support;
+(id)sendPendingAchievements:(id)achievements syncOnly:(BOOL)only onSuccess:(const OFDelegate*)success onFailure:(const OFDelegate*)failure;
+(bool)localUpdateAchievement:(id)achievement forUser:(id)user andPercentComplete:(double)complete;
+(id)getLastSyncDateForUserId:(id)userId;
+(id)updateAchievements:(id)achievements withPercentCompletes:(id)percentCompletes onSuccess:(const OFDelegate*)success onFailure:(const OFDelegate*)failure;
+(double)getPercentComplete:(id)complete forUser:(id)user;
+(bool)synchUnlockedAchievement:(id)achievement forUser:(id)user gamerScore:(id)score serverDate:(id)date percentComplete:(double)complete;
+(void)synchAchievementsList:(id)list forUser:(id)user;
+(void)getAchievementsLocal:(const OFDelegate*)local onFailure:(const OFDelegate*)failure;
+(id)getAchievementsLocal;
+(bool)hasAchievements;
+(id)getAchievement:(id)achievement;
+(id)getAchievementLocalWithUnlockInfo:(id)unlockInfo;
+(void)syncOfflineAchievements:(id)achievements;
+(void)finishAchievementsPage:(id)page duringSync:(BOOL)sync fromBatch:(BOOL)batch;
-(id)init;
-(void)dealloc;
@end

