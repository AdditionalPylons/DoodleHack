/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "OFProviderProtocol.h"
#import "OFCallbackable.h"
#import "DoodleJump-Structs.h"

@class MPOAuthAPI, NSConditionLock, NSMutableArray, NSThread;

@interface OFProvider : XXUnknownSuperclass <OFCallbackable, OFProviderProtocol> {
	MPOAuthAPI* mOAuthApi;
	NSThread* mRequestThread;
	NSConditionLock* mRequestThreadLock;
	NSMutableArray* mRequestQueue;
	NSMutableArray* mActiveLoaders;
}
@property(readonly, assign) NSThread* requestThread;
+(id)providerWithProductKey:(id)productKey andSecret:(id)secret;
+(OFPointer<OFHttpService>)createHttpService;
+(BOOL)willSilentlyDiscardAction;
-(void)_requestThreadMain;
-(void)startupRequestThread;
-(void)cleanupRequestThread;
-(id)initWithProductKey:(id)productKey andSecret:(id)secret;
-(void)dealloc;
-(void)destroyAllPendingRequests;
-(void)cancelRequest:(id)request;
-(void)destroyLocalCredentials;
-(bool)isAuthenticated;
-(void)actionRequestWithLoader:(id)loader withRequestType:(int)requestType withNotice:(id)notice requiringAuthentication:(bool)authentication;
-(void)_loaderFinished:(id)finished nextCall:(id)call;
-(void)retrieveAccessToken;
-(void)retrieveRequestToken;
-(id)getRequestToken;
-(id)getAccessToken;
-(id)getRequestForAction:(id)action withParameters:(id)parameters withHttpMethod:(id)httpMethod withSuccess:(const OFDelegate*)success withFailure:(const OFDelegate*)failure withRequestType:(int)requestType withNotice:(id)notice requiringAuthentication:(bool)authentication;
-(id)performAction:(id)action withParameters:(id)parameters withHttpMethod:(id)httpMethod withSuccess:(const OFDelegate*)success withFailure:(const OFDelegate*)failure withRequestType:(int)requestType withNotice:(id)notice requiringAuthentication:(bool)authentication;
-(id)performAction:(id)action withParameters:(id)parameters withHttpMethod:(id)httpMethod withSuccess:(const OFDelegate*)success withFailure:(const OFDelegate*)failure withRequestType:(int)requestType withNotice:(id)notice;
-(void)setAccessToken:(id)token andSecret:(id)secret;
-(bool)canReceiveCallbacksNow;
@end

